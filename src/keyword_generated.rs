use crate::hash;
use crate::keyword_list;
const HASH_TABLE_SIZE: usize = 512;
const HASH_TABLE_SEED: u64 = 16689755324008566830;
const STRING_TABLE_SIZE: usize = 461;

pub struct PerfectKeywordHasher(u64);

impl std::hash::Hasher for PerfectKeywordHasher {
    fn finish(&self) -> u64 {
        self.0
    }

    fn write(&mut self, bytes: &[u8]) {
        let selection = unsafe { hash::select(bytes) };
        let hash_code = hash::mix(selection, HASH_TABLE_SEED);
        let idx = hash_code as usize % HASH_TABLE_SIZE;
        self.0 = idx as u64;
    }

    fn write_u8(&mut self, _i: u8) {
        unimplemented!()
    }

    fn write_u16(&mut self, _i: u16) {
        unimplemented!()
    }

    fn write_u32(&mut self, _i: u32) {
        unimplemented!()
    }

    fn write_u64(&mut self, _i: u64) {
        unimplemented!()
    }

    fn write_u128(&mut self, _i: u128) {
        unimplemented!()
    }

    fn write_usize(&mut self, _i: usize) {
        unimplemented!()
    }

    fn write_i8(&mut self, _i: i8) {
        unimplemented!()
    }

    fn write_i16(&mut self, _i: i16) {
        unimplemented!()
    }

    fn write_i32(&mut self, _i: i32) {
        unimplemented!()
    }

    fn write_i64(&mut self, _i: i64) {
        unimplemented!()
    }

    fn write_i128(&mut self, _i: i128) {
        unimplemented!()
    }

    fn write_isize(&mut self, _i: isize) {
        unimplemented!()
    }

    fn write_length_prefix(&mut self, _len: usize) {}

    fn write_str(&mut self, _s: &str) {
        unimplemented!()
    }
}

pub struct PerfectKeywordHasherBuilder;

impl std::hash::BuildHasher for PerfectKeywordHasherBuilder {
    type Hasher = PerfectKeywordHasher;

    fn build_hasher(&self) -> Self::Hasher {
        PerfectKeywordHasher(0)
    }
}

pub struct KeywordTableEntry(u32, u32);

pub struct KeywordTable {
    entries: [KeywordTableEntry; HASH_TABLE_SIZE],
    bytes: [u8; STRING_TABLE_SIZE],
}

impl KeywordTable {
    pub fn is_keyword(&self, candidate: &str) -> bool {
        let slice = candidate.as_bytes();
        let clen = candidate.len();
        // this branch is necessary so that the safety requirement of `hash::select` is upheld.
        if clen < keyword_list::MIN_KEY_LENGTH || clen > keyword_list::MAX_KEY_LENGTH {
            return false;
        }

        let selection = unsafe { hash::select(slice) };

        let hash_code = hash::mix(selection, HASH_TABLE_SEED);
        let idx = hash_code as usize % HASH_TABLE_SIZE;
        let KeywordTableEntry(key_start, len) = &self.entries[idx];
        let key_start = *key_start as usize;
        let len = *len as usize;

        // this branch improves performance for non-keyword cases, where len always equals 0 and we
        // always exit early without doing the memcmp.
        if clen != len {
            return false;
        }

        let keyword = &self.bytes[key_start..key_start + len];
        slice == keyword
    }
}

pub static KEYWORD_HASH_TABLE: KeywordTable = KeywordTable {
    entries: [
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(252, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(77, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(378, 2),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(365, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(390, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(173, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(436, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(179, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(83, 5),
        KeywordTableEntry(418, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(155, 7),
        KeywordTableEntry(43, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(263, 10),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(315, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(148, 7),
        KeywordTableEntry(381, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(162, 8),
        KeywordTableEntry(34, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(185, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(197, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(308, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(63, 2),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(71, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(395, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(296, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(425, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(329, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(206, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(52, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(49, 3),
        KeywordTableEntry(65, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(212, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(170, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(428, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(43, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(39, 2),
        KeywordTableEntry(321, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(289, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(103, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(418, 6),
        KeywordTableEntry(9, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(257, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(28, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(18, 3),
        KeywordTableEntry(413, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(408, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(303, 5),
        KeywordTableEntry(386, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(94, 6),
        KeywordTableEntry(273, 2),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(88, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(224, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(14, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(357, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(61, 4),
        KeywordTableEntry(5, 4),
        KeywordTableEntry(233, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(376, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(133, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(402, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(112, 6),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(293, 3),
        KeywordTableEntry(365, 11),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(216, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(68, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(219, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(100, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(281, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(125, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(189, 3),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(242, 10),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(139, 9),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(335, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(342, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(118, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(275, 6),
        KeywordTableEntry(21, 7),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(192, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(349, 8),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(325, 4),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(56, 5),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(47, 2),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(128, 2),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
        KeywordTableEntry(0, 0),
    ],
    bytes: [
        121, 105, 101, 108, 100, 119, 105, 116, 104, 119, 104, 105, 108, 101, 118, 111, 105, 100,
        118, 97, 114, 117, 110, 107, 110, 111, 119, 110, 117, 110, 105, 113, 117, 101, 117, 110,
        100, 101, 102, 105, 110, 101, 100, 116, 121, 112, 101, 111, 102, 116, 114, 121, 116, 114,
        117, 101, 116, 104, 114, 111, 119, 116, 104, 105, 115, 116, 97, 114, 103, 101, 116, 115,
        121, 109, 98, 111, 108, 115, 119, 105, 116, 99, 104, 115, 117, 112, 101, 114, 115, 116,
        114, 105, 110, 103, 115, 116, 97, 116, 105, 99, 115, 101, 116, 115, 97, 116, 105, 115, 102,
        105, 101, 115, 114, 101, 116, 117, 114, 110, 114, 101, 113, 117, 105, 114, 101, 114, 101,
        97, 100, 111, 110, 108, 121, 112, 117, 98, 108, 105, 99, 112, 114, 111, 116, 101, 99, 116,
        101, 100, 112, 114, 105, 118, 97, 116, 101, 112, 97, 99, 107, 97, 103, 101, 111, 118, 101,
        114, 114, 105, 100, 101, 111, 117, 116, 111, 98, 106, 101, 99, 116, 110, 117, 109, 98, 101,
        114, 110, 117, 108, 108, 110, 101, 119, 110, 101, 118, 101, 114, 110, 97, 109, 101, 115,
        112, 97, 99, 101, 109, 111, 100, 117, 108, 101, 109, 101, 116, 97, 108, 101, 116, 107, 101,
        121, 111, 102, 105, 110, 116, 114, 105, 110, 115, 105, 99, 105, 110, 116, 101, 114, 102,
        97, 99, 101, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 105, 110, 102, 101, 114, 105,
        109, 112, 111, 114, 116, 105, 109, 112, 108, 101, 109, 101, 110, 116, 115, 105, 102, 103,
        108, 111, 98, 97, 108, 102, 117, 110, 99, 116, 105, 111, 110, 102, 114, 111, 109, 102, 111,
        114, 102, 105, 110, 97, 108, 108, 121, 102, 97, 108, 115, 101, 101, 120, 116, 101, 110,
        100, 115, 101, 120, 112, 111, 114, 116, 101, 110, 117, 109, 101, 108, 115, 101, 100, 101,
        108, 101, 116, 101, 100, 101, 102, 97, 117, 108, 116, 100, 101, 99, 108, 97, 114, 101, 100,
        101, 98, 117, 103, 103, 101, 114, 99, 111, 110, 116, 105, 110, 117, 101, 99, 111, 110, 115,
        116, 114, 117, 99, 116, 111, 114, 99, 108, 97, 115, 115, 99, 97, 116, 99, 104, 99, 97, 115,
        101, 98, 114, 101, 97, 107, 98, 111, 111, 108, 101, 97, 110, 98, 105, 103, 105, 110, 116,
        97, 119, 97, 105, 116, 97, 115, 121, 110, 99, 97, 115, 115, 101, 114, 116, 115, 97, 110,
        121, 97, 99, 99, 101, 115, 115, 111, 114, 97, 98, 115, 116, 114, 97, 99, 116, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ],
};
